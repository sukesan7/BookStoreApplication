/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bookstore.ui;

import bookstore.Book;
import bookstore.Order;
import bookstore.states.ActionsEnum;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class CustomerStartPage extends javax.swing.JFrame {
    /**
     * Creates new form CustomerStartPage
     */
    public CustomerStartPage() {
        initComponents();
        String status = BookStoreLauncher.current_customer.getStatus().toString().toLowerCase();
        welcomeLabel.setText("Welcome " + BookStoreLauncher.current_customer.getUsername() 
                            + ", You have " + BookStoreLauncher.current_customer.getPoints() 
                            + " points. Your Status is " + status);
        this.setLocationRelativeTo(null);
        customerBookTable.getTableHeader().setReorderingAllowed(false);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        customerBookTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        customerBookTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        refreshTable();
        DefaultTableModel bookTableModel = (DefaultTableModel) customerBookTable.getModel();
        bookTableModel.addTableModelListener((e)->{
            int selectedRows = 0;
            for(int i = 0; i < bookTableModel.getRowCount(); i++){
                if((boolean) bookTableModel.getValueAt(i, 2)){
                    selectedRows++;
                }
            }
            customerBookSelectionLabel.setText(selectedRows + " Books Selected");
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        welcomeLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerBookTable = new javax.swing.JTable();
        customerBookSelectionLabel = new javax.swing.JLabel();
        buyBtn = new javax.swing.JButton();
        redeemAndBuyBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        welcomeLabel.setText("Welcome Jane, You have P points. Your Status is S");

        customerBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book Name", "Book Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(customerBookTable);
        if (customerBookTable.getColumnModel().getColumnCount() > 0) {
            customerBookTable.getColumnModel().getColumn(0).setResizable(false);
            customerBookTable.getColumnModel().getColumn(1).setResizable(false);
            customerBookTable.getColumnModel().getColumn(2).setResizable(false);
        }

        customerBookSelectionLabel.setText("0 Books Selected");

        buyBtn.setText("Buy");
        buyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyBtnActionPerformed(evt);
            }
        });

        redeemAndBuyBtn.setText("Redeem points and Buy");
        redeemAndBuyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redeemAndBuyBtnActionPerformed(evt);
            }
        });

        logoutBtn.setText("Logout");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(welcomeLabel)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buyBtn)
                            .addComponent(customerBookSelectionLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redeemAndBuyBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(logoutBtn)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(welcomeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(customerBookSelectionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buyBtn)
                .addGap(18, 18, 18)
                .addComponent(redeemAndBuyBtn)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutBtn)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        BookStoreLauncher.processEvent(ActionsEnum.LOGOUT);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void buyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyBtnActionPerformed
        /* Find all selected rows */
        DefaultTableModel bookTableModel = (DefaultTableModel) customerBookTable.getModel();
        boolean empty = true;
        for(int i = 0; i < bookTableModel.getRowCount(); i++){
            if((boolean) bookTableModel.getValueAt(i, 2)){
                String bookName = (String) bookTableModel.getValueAt(i, 0);
                float bookPrice = (float) bookTableModel.getValueAt(i, 1);
                Book selectedBook = new Book(bookName, bookPrice, BookStoreLauncher.admin);
                BookStoreLauncher.current_customer.getCart().add(selectedBook);
                empty = false;
            }
        }
        
        if(empty){
            /* TODO: Notify user that he didn't select anything */
            return;
        }
        
        
        /* Process order */
        int points_earned = BookStoreLauncher.current_customer.pointsEarnedAfterPurchase();
        float total_cost = (float) BookStoreLauncher.current_customer
                                            .getCart()
                                            .stream()
                                            .mapToDouble(book -> book.price())
                                            .sum();
        Order order = new Order(total_cost, points_earned);
        BookStoreLauncher.current_customer.addOrder(order);
        BookStoreLauncher.current_customer.clearCart();
        BookStoreLauncher.processEvent(ActionsEnum.PURCHASE);
    }//GEN-LAST:event_buyBtnActionPerformed

    private void redeemAndBuyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redeemAndBuyBtnActionPerformed
        /* Find all selected rows */
        DefaultTableModel bookTableModel = (DefaultTableModel) customerBookTable.getModel();
        boolean empty = true;
        for(int i = 0; i < bookTableModel.getRowCount(); i++){
            if((boolean) bookTableModel.getValueAt(i, 2)){
                String bookName = (String) bookTableModel.getValueAt(i, 0);
                float bookPrice = (float) bookTableModel.getValueAt(i, 1);
                Book selectedBook = new Book(bookName, bookPrice, BookStoreLauncher.admin);
                BookStoreLauncher.current_customer.getCart().add(selectedBook);
                empty = false;
            }
        }
        
        if(empty){
            /* TODO: Notify user that he didn't select anything */
            return;
        }
        
        /* Process order */
        float costLeftOver = BookStoreLauncher.current_customer.redeemPointsAndGetCost();
        int points_earned = (int) Math.floor(costLeftOver * 10);
        Order order = new Order(costLeftOver, points_earned);
        BookStoreLauncher.current_customer.addOrder(order);
        BookStoreLauncher.current_customer.clearCart();
        BookStoreLauncher.processEvent(ActionsEnum.PURCHASE);
    }//GEN-LAST:event_redeemAndBuyBtnActionPerformed
    
    private void refreshTable(){
        ArrayList<Book> booksToLoad = BookStoreLauncher.admin.getBooks();
        DefaultTableModel bookTableModel = (DefaultTableModel) customerBookTable.getModel();
        /* Empty the table first */
        bookTableModel.setRowCount(0);
        for(Book book: booksToLoad){
            bookTableModel.addRow(new Object[]{book.title(), book.price(), false});
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buyBtn;
    private javax.swing.JLabel customerBookSelectionLabel;
    private javax.swing.JTable customerBookTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton redeemAndBuyBtn;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables
}
